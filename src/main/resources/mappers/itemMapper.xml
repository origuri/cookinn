<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="itemMapper">

    <!--전체 조회 또는 조건 조회 -->
    <select id="selectItemByItemSearchDto" parameterType="ItemSearchDto" resultType="ItemDto">
        SELECT  *
        FROM    item
        WHERE   item_status = 'Y'
        <if test="itemBarcode != null and itemBarcode != 0">
            AND item_barcode = #{itemBarcode}
        </if>
        <if test="name != null and name != '' ">
            AND name like  CONCAT('%',#{name},'%')
        </if>
        <if test="productOrigin != null and productOrigin != ''">
            AND product_origin LIKE CONCAT('%',#{productOrigin},'%')
        </if>
        <if test="company != null">
            AND company LIKE CONCAT('%',#{company},'%')
        </if>
        <if test="keep != null and keep != ''">
            AND keep LIKE CONCAT('%',#{keep},'%')
        </if>
        ORDER BY
        <choose>
            <when test="kind == 0">
                 price  ASC
            </when>
            <otherwise>
                price   DESC
            </otherwise>
        </choose>
    </select>

    <!--제품 등록-->
    <insert id="insertItemByItemDto" parameterType="ItemDto">
        INSERT INTO item(category_mid_id, category_large_id, item_barcode, name, product_origin, unit, price, quantity, company, notice, keep, created_time)
        VALUES (#{categoryMidId}, #{categoryLargeId}, #{itemBarcode}, #{name}, #{productOrigin}, #{unit}, #{price}, #{quantity}, #{company},#{notice}, #{keep}, sysdate())
    </insert>

    <!--제품 수정-->
    <update id="updateItemByItemDto" parameterType="ItemUpdateDto">
        UPDATE  item
        SET     category_mid_id = #{categoryMidId},
                category_large_id = #{categoryLargeId},
                name = #{name},
                product_origin = #{productOrigin},
                unit = #{unit},
                company = #{company},
                keep = #{keep},
                price = #{price},
                item_status = #{itemStatus},
                updated_time = sysdate()
        WHERE   item_id = #{itemId}
    </update>

    <!--제품 한개만 찾기-->
    <select id="selectItemDetailByItemId" parameterType="java.lang.Long" resultType="ItemDto">
        SELECT  *
        FROM    item
        WHERE   item_id = #{itemId}
    </select>

    <!--제품 삭제-->
    <delete id="deleteItemByItemId" parameterType="java.lang.Long">
        DELETE
        FROM    item
        WHERE   item_id = #{itemId}
    </delete>
</mapper>